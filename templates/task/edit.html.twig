{% extends 'dashboard/main.html.twig' %}

{% block title %}Edit {{ task.parent is not null ? 'Subtask' : 'Task' }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('styles/flowbite.min.css') }}">
{% endblock %}

{% block content %}
    <div class="max-w-2xl mx-auto">
        <div class="bg-white shadow-md rounded-lg p-6">
            <h1 class="text-2xl font-bold mb-6">Edit {{ task.parent is not null ? 'Subtask' : 'Task' }}</h1>

            {% if task.parent is not null %}
                <div class="mb-6 p-4 bg-gray-50 rounded-lg">
                    <h2 class="font-medium text-gray-700">Parent Task:</h2>
                    <p class="text-gray-600">{{ task.parent.title }}</p>
                </div>
            {% endif %}

            {{ form_start(form, {'attr': {'class': 'space-y-6'}}) }}
            {{ form_row(form.title) }}
            {{ form_row(form.description) }}

            <div class="pt-5 border-t border-gray-200 dark:border-gray-800 flex sm:flex-row flex-col sm:space-x-5 rtl:space-x-reverse">
                <div class="hidden">{{ form_label(form.dueDate) }}</div>
                <div id="datepicker"
                     inline-datepicker
                     datepicker-buttons
                     datepicker-autoselect-today
                     class="mx-auto sm:mx-0"
                     data-date="{{ task.dueDate|date('m/d/Y') }}"></div>
                {{ form_widget(form.dueDate, {'attr': {'class': 'hidden'}}) }}
                <div class="sm:ms-7 sm:ps-5 sm:border-s border-gray-200 dark:border-gray-800 w-full sm:max-w-[15rem] mt-5 sm:mt-0">
                    <ul id="timetable" class="grid w-full grid-cols-2 gap-2">
                        {% for time in ["07:00", "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00"] %}
                            <li>
                                <input type="radio" id="{{ time }}" value="{{ time }}" class="hidden peer" name="timetable">
                                <label for="{{ time }}"
                                       class="inline-flex items-center justify-center w-full p-2 text-sm font-medium text-center bg-white border rounded-lg cursor-pointer text-blue-600 border-blue-600 dark:hover:text-white dark:border-blue-500 dark:peer-checked:border-blue-500 peer-checked:border-blue-600 peer-checked:bg-blue-600 hover:text-white peer-checked:text-white hover:bg-blue-500 dark:text-blue-500 dark:bg-gray-900 dark:hover:bg-blue-600 dark:hover:border-blue-600 dark:peer-checked:bg-blue-500">
                                    {{ time }} Uhr
                                </label>
                            </li>
                        {% endfor %}
                    </ul>
                </div>
            </div>

            {{ form_row(form.tags) }}

            <div class="flex justify-between">
                <button type="button"
                        class="bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600"
                        onclick="return confirm('Are you sure you want to delete this task?') && document.getElementById('delete-form').submit();">
                    Delete {{ task.parent is not null ? 'Subtask' : 'Task' }}
                </button>
                <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600">
                    Save Changes
                </button>
            </div>
            {{ form_end(form) }}

            <form id="delete-form" action="{{ path('app_task_delete', {id: task.id}) }}" method="post" class="hidden">
            </form>
        </div>
    </div>

    <script src="{{ asset('js/flowbite.min.js') }}"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const dateInput = document.querySelector('#task_dueDate');
            const timeInput = document.getElementById('timetable');
            const datepicker = document.getElementById('datepicker');

            const initialDate = new Date('{{ task.dueDate|date('Y-m-d H:i:s') }}');

            initialDate.setHours(initialDate.getHours() + 1);
            dateInput.value = initialDate.toISOString().slice(0, 16);

            const initialTimeString =
                initialDate.getHours().toString().padStart(2, '0') + ':' +
                initialDate.getMinutes().toString().padStart(2, '0');

            const matchingTimeRadio = document.querySelector(`#timetable input[value="${initialTimeString}"]`);
            if (matchingTimeRadio) {
                matchingTimeRadio.checked = true;
            }

            function updateDateInput(date, time) {
                const [hours, minutes] = (time || '10:00').split(':');
                date.setHours(hours - date.getTimezoneOffset() / 60, minutes, 0, 0);
                dateInput.value = date.toISOString().slice(0, 16);
            }

            datepicker.addEventListener('changeDate', function(e) {
                const date = new Date(e.detail.date);
                const time = document.querySelector('#timetable input:checked')?.value;
                updateDateInput(date, time);
            });

            timeInput.addEventListener('change', function() {
                const date = new Date(dateInput.value);
                const time = document.querySelector('#timetable input:checked')?.value;
                updateDateInput(date, time);
            });
        });
    </script>
{% endblock %}