<div class="py-1">
    <div class="px-2 rounded-sm shadow-[0_0_12px_1px_rgba(0,0,0,0.1)] {{ task.isDone ? 'bg-gray-100' : 'bg-white' }} task-container"
         data-task-id="{{ task.id }}">
        <div class="flex">
            <div class="h-full m-auto px-4 flex items-center">
                {% if task.subTasks is empty %}
                    {% include 'task/_checkbox.html.twig' %}
                {% else %}
                    {% include 'task/_progressbox.html.twig' %}
                {% endif %}
            </div>
            <div class="w-full">
                <div class="w-full py-2 pl-2 flex justify-between">
                    <div>
                        <span class="font-bold cursor-pointer {{ task.isDone ? 'line-through text-gray-300' : '' }}"
                              onclick="toggleSubTasks({{ task.id }})">
                            {{ task.title }}
                        </span>
                    </div>
                    <div class="flex items-center">
                        {% if not task.isDone and task.parent is empty %}
                            <div class="px-3 cursor-pointer" onclick="toggleTaskDetails({{ task.id }})">
                                <img src="{{ asset('images/sort-amount-down.svg') }}" alt="Logout" class="w-4 h-4">
                            </div>
                        {% endif %}
                        {% include 'components/icons/calendar.svg.html.twig' with {c_color: task.isDone ? '' : '#1d4ed8'} %}
                        <a href="{{ path('app_task_edit', {id: task.id}) }}">
                            <span class="pl-1 {{ task.isDone ? 'line-through text-gray-300' : 'text-blue-700' }}">
                                <span class="font-bold">{{ task.dueDate|date('d.m.') }}</span>
                                um
                                <span class="font-bold">{{ task.dueDate|date('H:i') }}</span>
                                Uhr
                            </span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
        <!-- Expands on click -->
        <div class="task-details hidden w-full pl-2 py-2 flex justify-between items-center">
            <div>
                {% if task.description and not task.isDone %}
                <span class="font-extralight text-gray-400">{{ task.description }}</span>
                {% endif %}
            </div>
            <div>
                <span class="text-sm text-gray-500">
                    {% if task.tags %}
                        {% for tag in task.tags %}
                            <span class="bg-gray-100 px-2 py-1 rounded">{{ tag }}</span>
                        {% endfor %}
                    {% endif %}
                </span>
            </div>
            {% if not task.isDone and task.parent is empty %}
                <div class="flex gap-6">
                    <a href="{{ path('app_task_new', {project: project.id, parent: task.id}) }}"
                       class="text-blue-500 hover:text-blue-700 text-sm">
                        <div class="flex items-center px-2 hover:bg-gray-50 rounded shadow-inner text-zinc-400 hover:text-emerald-500">
                            <div class="w-4 h-4">
                                {% include 'components/icons/plus.svg.html.twig' with {c_color_hover: '#10B981'} %}
                            </div>
                            <span class="pl-2">New Subtask</span>
                        </div>
                    </a>
                </div>
            {% endif %}
        </div>
    </div>
</div>

<script>
    function toggleTaskDetails(taskId) {
        const taskElement = document.querySelector(`.task-container[data-task-id="${taskId}"]`);
        const detailsElement = taskElement.querySelector('.task-details');
        detailsElement.classList.toggle('hidden');
    }
    function toggleSubTasks(taskId) {
        const taskElement = document.querySelector(`.task-container[data-task-id="${taskId}"]`);
        const subtasksElement = taskElement.parentElement.parentElement.querySelector('.subtasks');
        subtasksElement.classList.toggle('hidden');
    }
</script>
